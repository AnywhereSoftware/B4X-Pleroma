Build1=Default,b4i.pleroma,HU2_PUBLIC
Build2=Simulator,b4i.pleroma,HU2_PUBLIC,SIMULATOR
File1=AccountView.bil
File10=hamburger.png
File11=hamburger_notif.png
File12=hamburger_notif_small.png
File13=icon.png
File14=LeftDrawer.bil
File15=lstDrawerUser.bil
File16=MainPage.bil
File17=message.wav
File18=MiniAccountView.bil
File19=Missing-image-232x150.png
File2=AccountView.json
File20=nsfw.74818f9.png
File21=play.png
File22=Poll.json
File23=PollView.bil
File24=PostView.bil
File25=PostView.json
File26=PostViewMedia.bil
File27=ReactionsView.bil
File28=Report.json
File29=Search.bil
File3=CardView.bil
File30=Settings.json
File31=StatusList.bil
File32=StatusViewImpl.bil
File33=theme.json
File34=tile.png
File35=tile-dark.png
File36=VideoPlayer.bil
File37=WebViewDialog.bil
File4=ChatInputField.bil
File5=ChatView.bil
File6=close_icon.png
File7=DialogContainer.bil
File8=empty.png
File9=GifView.bil
FileGroup1=Default Group
FileGroup10=Default Group
FileGroup11=Default Group
FileGroup12=Default Group
FileGroup13=Default Group
FileGroup14=Default Group
FileGroup15=Default Group
FileGroup16=Default Group
FileGroup17=Default Group
FileGroup18=Default Group
FileGroup19=Default Group
FileGroup2=Default Group
FileGroup20=Default Group
FileGroup21=Default Group
FileGroup22=Default Group
FileGroup23=Default Group
FileGroup24=Default Group
FileGroup25=Default Group
FileGroup26=Default Group
FileGroup27=Default Group
FileGroup28=Default Group
FileGroup29=Default Group
FileGroup3=Default Group
FileGroup30=Default Group
FileGroup31=Default Group
FileGroup32=Default Group
FileGroup33=Default Group
FileGroup34=Default Group
FileGroup35=Default Group
FileGroup36=Default Group
FileGroup37=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
FileGroup9=Default Group
Group=Default Group
Library1=b4xdrawer
Library10=ifirebasenotifications
Library11=ihttputils2
Library12=ijson
Library13=imedia
Library14=iphone
Library15=iui8
Library16=iui9
Library17=iwebsocket
Library18=keyvaluestore
Library19=minihtmlparser
Library2=b4xgifview
Library20=webp
Library21=xui views
Library22=zoomimageview
Library23=igameview
Library3=b4xpages
Library4=b4xpreferencesdialog
Library5=bctextengine
Library6=bctoast
Library7=bitmapsasync
Library8=icore
Library9=ifirebaseanalytics
Module1=|relative|..\AccountView
Module10=|relative|..\Constants
Module11=|relative|..\DrawerManager
Module12=|relative|..\HtmlToRuns
Module13=|relative|..\ImagesCache
Module14=|relative|..\ListOfStatuses
Module15=|relative|..\MediaChooser
Module16=|relative|..\MiniAccountView
Module17=|relative|..\OAuth
Module18=|relative|..\PleromaFeed
Module19=|relative|..\PLMSettings
Module2=|relative|..\B4XLinksManager
Module20=|relative|..\PollView
Module21=|relative|..\PostView
Module22=|relative|..\Push
Module23=|relative|..\ReactionsView
Module24=|relative|..\ReportManager
Module25=|relative|..\RequestsManager
Module26=|relative|..\SearchManager
Module27=|relative|..\ServerManager
Module28=|relative|..\StackManager
Module29=|relative|..\StatusView
Module3=|relative|..\B4XMainPage
Module30=|relative|..\Streamer
Module31=|relative|..\StubView
Module32=|relative|..\TextUtils
Module33=|relative|..\ThemeManager
Module34=UserNotificationCenter
Module35=|relative|..\ViewsCache
Module36=|relative|..\WebViewDialog
Module37=|relative|..\X2SoundPool
Module4=|relative|..\BBListItem
Module5=|relative|..\CardView
Module6=|relative|..\ChatManager
Module7=|relative|..\ChatView
Module8=|relative|..\CLVBackwards
Module9=|relative|..\CLVSelections
NumberOfFiles=37
NumberOfLibraries=23
NumberOfModules=37
Version=7.5
@EndOfDesignText@
'Code module
#Region  Project Attributes 
	#ApplicationLabel: B4X for P &amp; M
	#Version: 1.50
	'Orientation possible values: Portrait, LandscapeLeft, LandscapeRight and PortraitUpsideDown
	#iPhoneOrientations: Portrait
	#iPadOrientations: Portrait
	#Target: iPhone, iPad
	#ATSEnabled: false
	#MinVersion: 10
	#PlistExtra: <key>UIViewControllerBasedStatusBarAppearance</key><false/>
	#UrlScheme: b4i.pleroma
	#if Not(SIMULATOR)
	#AdditionalLib: KSCrash.framework.3
	#AdditionalLib: MessageUI.framework
	#AdditionalLib: SystemConfiguration.framework
	#AdditionalLib: libc++.dylib
	#AdditionalLib: libz.dylib
	#End If
	#PlistExtra:<key>NSPhotoLibraryUsageDescription</key><string>Add images and videos as attachments.</string>
	#PlistExtra:<key>NSCameraUsageDescription</key><string>Add images and videos as attachments.</string>
	#PlistExtra:<key>NSMicrophoneUsageDescription</key><string>Add videos as attachments.</string>
	#ProvisionFile: pleroma.mobileprovision
	#Entitlement: <key>aps-environment</key><string>production</string>
	#CertificateFile: ios_old_distribution.cer
	#if Not(SIMULATOR)
	#ProvisionFile: pleroma_store.mobileprovision
	#End If
	'This enables the system dark mode feature.
	#PlistExtra: <!--<key>UIUserInterfaceStyle</key>-->
#End Region

Sub Process_Globals
	
	Public App As Application
	Public NavControl As NavigationController
	Private reporter As NativeObject
	Private xui As XUI
	Private Analytics As FirebaseAnalytics
	Public fm As FirebaseMessaging
	Private ForegroundFlag As Boolean 'https://www.b4x.com/android/forum/threads/re-how-detect-user-tap-on-notification.117548/#content
	Private unc As UserNotificationCenter
	Public Const NavBarBarTintColor As Int = 0xFF006FA6
	Public Const NavBarTintColor As Int = Colors.White
	Private BackgroundTime As Long 'this is used to ignore the dark state event that occurs immediately after moving to the background
End Sub

Private Sub Application_Start (Nav As NavigationController)
	SetDebugAutoFlushLogs(True)
	NavControl = Nav
	Analytics.Initialize 
	Dim PagesManager As B4XPagesManager
	PagesManager.Initialize(NavControl)
	NavControl.NavigationBarVisible = True
	Dim no As NativeObject = NavControl
	no.GetField("navigationBar").RunMethod("setBarTintColor:", Array(no.ColorToUIColor(NavBarBarTintColor)))
	Dim no As NativeObject = App
	no.RunMethod("setStatusBarStyle:", Array(1))
	SetTitleColor(Nav, Colors.White)
	Dim no As NativeObject = NavControl
	no.GetField("navigationBar").RunMethod("setTintColor:", Array(no.ColorToUIColor(NavBarTintColor)))
	#if RELEASE
	If App.IsSimulator = False Then
		CreateReporter
		SendReportsIfNeeded
	End If
	#end if
	fm.Initialize("fm")	
	unc.Initialize
End Sub

Private Sub fm_FCMConnected
	Log("FCMConnected")
	'here we can subscribe and unsubscribe from topics
End Sub

Private Sub Application_RemoteNotification (Message As Map, CompletionHandler As CompletionHandler)
	If ForegroundFlag = False Then
		Log("Notification clicked")
		Sleep(100)
		If B4XPages.IsInitialized And B4XPages.MainPage.IsInitialized Then
			Dim title As String = Message.Get("title")
			B4XPages.MainPage.NotificationClicked (title = Constants.NewChatMessageTitle)
		End If
	Else
		Log($"Message arrived: ${Message}"$)
		CompletionHandler.Complete
	End If
End Sub

Public Sub UserNotification_WillPresent (Notification As Object) As Int
	Dim n As NativeObject = Notification
	Dim request As NativeObject = n.GetField("request")
	Dim content As NativeObject = request.GetField("content")
	Dim title As String = content.GetField("title").AsString
	If title = Constants.NewChatMessageTitle Then
		Return 0
	Else
		Return 6 'alert + sound
	End If
End Sub

Private Sub TraitCollection_Changed
	Dim delta As Long = DateTime.Now - BackgroundTime
	Log("TraitCollection_Changed: " & delta)
	If delta < 1000 Then Return
	If B4XPages.IsInitialized And B4XPages.MainPage.IsInitialized And B4XPages.MainPage.Theme.IsInitialized Then
		B4XPages.MainPage.Theme.SetDark(IsDark)
	End If
End Sub

Public Sub IsDark As Boolean
	Dim App As Application
	If App.OSVersion >= 13 Then
		Dim no As NativeObject = App.KeyController
		Return 2 = no.GetField("traitCollection").GetField("userInterfaceStyle").AsNumber
	End If
	Return False
End Sub

Private Sub Application_Active
	fm.FCMConnect 'should be called from Application_Active
	If B4XPages.IsInitialized And B4XPages.MainPage.IsInitialized And B4XPages.MainPage.Stream.IsInitialized Then
		B4XPages.MainPage.Stream.Disconnect
	End If
	Sleep(5000)
	ForegroundFlag = True
	App.ApplicationIconBadgeNumber = 0
End Sub



Sub Application_PushToken (Success As Boolean, Token() As Byte)
	Log($"PushToken: ${Success}"$)
	Log(LastException)
End Sub

Sub SendReportsIfNeeded As ResumableSub
	Dim no As NativeObject
	no = no.Initialize("KSCrash").RunMethod("sharedInstance", Null)
	Dim reports As Int = no.GetField("reportCount").AsNumber
	Log($"Number of reports: ${reports}"$)
	'Page1.Title = reports
	If reports > 0 Then
		Sleep(0)
		Dim nme As NativeObject = Me
		nme.RunMethod("sendReports:", Array(reporter))
	End If
	Return True
End Sub

Sub CreateReporter
	reporter = reporter.Initialize("KSCrashInstallationStandard").RunMethod("sharedInstance", Null)
	Dim url As NativeObject
	url = url.Initialize("NSURL").RunMethod("URLWithString:", Array(Constants.CrashReportsServer)) '"Array("https://b4x.com:51051/report"))
	reporter.SetField("url", url)
	reporter.RunMethod("install", Null)
End Sub

#if Not(SIMULATOR)
#if OBJC
#import <KSCrash/KSCrashFramework.h>

- (void) sendReports:(KSCrashInstallation*)installation {
[installation sendAllReportsWithCompletion:^(NSArray* reports, BOOL completed, NSError* error)
     {
         if(completed)
         {
             NSLog(@"Sent %d reports", (int)[reports count]);
         }
         else
         {
             NSLog(@"Failed to send reports: %@", error);
         }
     }];
}
#End If
#End If

Sub SetTitleColor(nav As NavigationController, clr As Int)
	Dim attributes As NativeObject
	attributes = attributes.Initialize("B4IAttributedString").RunMethod("createAttributes::", _
     Array(Font.CreateNew(18), attributes.ColorToUIColor(clr)))
	Dim no As NativeObject = nav
	no.GetField("navigationBar").RunMethod("setTitleTextAttributes:", Array(attributes))
End Sub

Sub Application_OpenUrl (Url As String, Data As Object, SourceApplication As String) As Boolean

	
	B4XPages.MainPage.auth.CallFromOpenUrl(Url)
	Return True
End Sub

'Template version: B4i-1.0
#Region Delegates
Private Sub Application_Background
	B4XPages.Delegate.Activity_Pause
	fm.FCMDisconnect
	ForegroundFlag = False
	BackgroundTime = DateTime.Now
End Sub

Private Sub Application_Foreground
	B4XPages.Delegate.Activity_Resume
End Sub
#End Region

#if OBJC
@end
@interface B4IViewController (KeyboardWillHide)
@end
@implementation B4IViewController (KeyboardWillHide)
- (void) addWillHide {
	 [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardWillHideNotification object:nil];
}
@end

@interface B4IPanelView  (touchcancelled)
@end
@implementation B4IPanelView  (touchcancelled)

- (void)touchesCancelled:(NSSet *)touches withEvent:(UIEvent *)event {
		B4I* bi = [self valueForKey:@"bi"];
		NSString* eventName = [self valueForKey:@"eventName"];
		for (UITouch *u in touches) {
            CGPoint p = [u locationInView:self];
            [bi raiseEvent:self event:eventName params:@[@4, @(p.x), @(p.y)]];
        }
}
#End If

'dark mode event
#if OBJC
@end
@interface UIWindow (DarkMode)
@end
@implementation UIWindow (DarkMode)
- (void)traitCollectionDidChange:(UITraitCollection *)previousTraitCollection {
	if (self.class == NSClassFromString(@"UIWindow")) {
		if (self.traitCollection.userInterfaceStyle != previousTraitCollection.userInterfaceStyle)
			[[b4i_main new].bi raiseEvent:nil event:@"traitcollection_changed" params:nil];
		else
			NSLog(@"Ignoring traitCollection change");
	}
}
#End If
