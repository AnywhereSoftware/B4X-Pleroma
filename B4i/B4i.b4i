Build1=Default,b4i.pleroma,HU2_PUBLIC
Build2=Simulator,b4i.pleroma,HU2_PUBLIC,SIMULATOR
File1=AccountView.bil
File10=lstDrawerUser.bil
File11=MainPage.bil
File12=MiniAccountView.bil
File13=Missing-image-232x150.png
File14=nsfw.74818f9.png
File15=play.png
File16=PostView.bil
File17=PostView.json
File18=PostViewMedia.bil
File19=ReactionsView.bil
File2=AccountView.json
File20=Report.json
File21=Search.bil
File22=Settings.json
File23=StatusList.bil
File24=StatusViewImpl.bil
File25=VideoPlayer.bil
File26=WebViewDialog.bil
File3=CardView.bil
File4=DialogContainer.bil
File5=empty.png
File6=GifView.bil
File7=hamburger.png
File8=icon.png
File9=LeftDrawer.bil
FileGroup1=Default Group
FileGroup10=Default Group
FileGroup11=Default Group
FileGroup12=Default Group
FileGroup13=Default Group
FileGroup14=Default Group
FileGroup15=Default Group
FileGroup16=Default Group
FileGroup17=Default Group
FileGroup18=Default Group
FileGroup19=Default Group
FileGroup2=Default Group
FileGroup20=Default Group
FileGroup21=Default Group
FileGroup22=Default Group
FileGroup23=Default Group
FileGroup24=Default Group
FileGroup25=Default Group
FileGroup26=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
FileGroup9=Default Group
Group=Default Group
Library1=icore
Library10=zoomimageview
Library11=webp
Library12=keyvaluestore
Library13=b4xdrawer
Library14=b4xpreferencesdialog
Library15=bctoast
Library16=ifirebaseanalytics
Library17=imedia
Library18=iphone
Library19=ifirebasenotifications
Library2=b4xpages
Library20=ihttputils2
Library21=iui9
Library3=xui views
Library4=bctextengine
Library5=ijson
Library6=iui8
Library7=b4xgifview
Library8=minihtmlparser
Library9=bitmapsasync
Module1=|relative|..\AccountView
Module10=|relative|..\ListOfStatuses
Module11=|relative|..\MediaChooser
Module12=|relative|..\MiniAccountView
Module13=|relative|..\OAuth
Module14=|relative|..\PleromaFeed
Module15=|relative|..\PLMSettings
Module16=|relative|..\PostView
Module17=|relative|..\Push
Module18=|relative|..\ReactionsView
Module19=|relative|..\ReportManager
Module2=|relative|..\B4XLinksManager
Module20=|relative|..\RequestsManager
Module21=|relative|..\SearchManager
Module22=|relative|..\ServerManager
Module23=|relative|..\StackManager
Module24=|relative|..\StatusView
Module25=|relative|..\StubView
Module26=|relative|..\TextUtils
Module27=UserNotificationCenter
Module28=|relative|..\ViewsCache
Module29=|relative|..\WebViewDialog
Module3=|relative|..\B4XMainPage
Module4=|relative|..\BBListItem
Module5=|relative|..\CardView
Module6=|relative|..\Constants
Module7=|relative|..\DrawerManager
Module8=|relative|..\HtmlToRuns
Module9=|relative|..\ImagesCache
NumberOfFiles=26
NumberOfLibraries=21
NumberOfModules=29
Version=6.8
@EndOfDesignText@
'Code module
#Region  Project Attributes 
	#ApplicationLabel: B4X Pleroma
	#Version: 1.25.0
	'Orientation possible values: Portrait, LandscapeLeft, LandscapeRight and PortraitUpsideDown
	#iPhoneOrientations: Portrait
	#iPadOrientations: Portrait
	#Target: iPhone, iPad
	#ATSEnabled: false
	#MinVersion: 10
	#PlistExtra: <key>UIViewControllerBasedStatusBarAppearance</key><false/>
	#UrlScheme: b4i.pleroma
	#if Not(SIMULATOR)
	#AdditionalLib: KSCrash.framework.3
	#AdditionalLib: MessageUI.framework
	#AdditionalLib: SystemConfiguration.framework
	#AdditionalLib: libc++.dylib
	#AdditionalLib: libz.dylib
	#End If
	#PlistExtra:<key>NSPhotoLibraryUsageDescription</key><string>Add images and videos as attachments.</string>
	#PlistExtra:<key>NSCameraUsageDescription</key><string>Add images and videos as attachments.</string>
	#PlistExtra:<key>NSMicrophoneUsageDescription</key><string>Add videos as attachments.</string>
	#ProvisionFile: pleroma.mobileprovision
	#Entitlement: <key>aps-environment</key><string>production</string>
	#if Not(SIMULATOR)
'	#ProvisionFile: pleroma_store.mobileprovision
	#End If
#End Region

Sub Process_Globals
	Public App As Application
	Public NavControl As NavigationController
	Private reporter As NativeObject
	Private xui As XUI
	Private Analytics As FirebaseAnalytics
	Public fm As FirebaseMessaging
	Private ForegroundFlag As Boolean 'https://www.b4x.com/android/forum/threads/re-how-detect-user-tap-on-notification.117548/#content
	Private unc As UserNotificationCenter
	Public Const NavBarBarTintColor As Int = 0xFF00BBFF
	Public Const NavBarTintColor As Int = Colors.White
End Sub

Private Sub Application_Start (Nav As NavigationController)
	SetDebugAutoFlushLogs(True)
	NavControl = Nav
	Analytics.Initialize 
	Dim PagesManager As B4XPagesManager
	PagesManager.Initialize(NavControl)
	NavControl.NavigationBarVisible = True
	Dim no As NativeObject = NavControl
	no.GetField("navigationBar").RunMethod("setBarTintColor:", Array(no.ColorToUIColor(NavBarBarTintColor)))
	Dim no As NativeObject = App
	no.RunMethod("setStatusBarStyle:", Array(1))
	SetTitleColor(Nav, Colors.White)
	Dim no As NativeObject = NavControl
	no.GetField("navigationBar").RunMethod("setTintColor:", Array(no.ColorToUIColor(NavBarTintColor)))
	#if RELEASE
	If App.IsSimulator = False Then
		CreateReporter
		SendReportsIfNeeded
	End If
	#end if
	fm.Initialize("fm")	
End Sub

Private Sub fm_FCMConnected
	Log("FCMConnected")
	'here we can subscribe and unsubscribe from topics
End Sub

Private Sub Application_RemoteNotification (Message As Map, CompletionHandler As CompletionHandler)
	If ForegroundFlag = False Then
		Log("Notification clicked")
	End If
	Log($"Message arrived: ${Message}"$)
	If unc.IsInitialized = False Then unc.Initialize
	unc.CreateNotificationWithContent(Message.Get("title"), Message.Get("body"), Message.Get("gcm.message_id"), "", 1)
	CompletionHandler.Complete
End Sub


Private Sub Application_Active
	fm.FCMConnect 'should be called from Application_Active
	Sleep(5000)
	ForegroundFlag = True
End Sub



Sub Application_PushToken (Success As Boolean, Token() As Byte)
	Log($"PushToken: ${Success}"$)
	Log(LastException)
End Sub

Sub SendReportsIfNeeded As ResumableSub
	Dim no As NativeObject
	no = no.Initialize("KSCrash").RunMethod("sharedInstance", Null)
	Dim reports As Int = no.GetField("reportCount").AsNumber
	Log($"Number of reports: ${reports}"$)
	'Page1.Title = reports
	If reports > 0 Then
		Sleep(0)
		Dim sf As Object = xui.Msgbox2Async("The app crashed last time it was launched. Please help us improve and send a crash report?", _
			"", "Yes", "No", "", Null)
		Wait For (sf) Msgbox_Result (Result As Int)
		If Result = xui.DialogResponse_Positive Then
			Dim nme As NativeObject = Me
			nme.RunMethod("sendReports:", Array(reporter))
		Else
			no.RunMethod("deleteAllReports", Null)
		End If
	End If
	Return True
End Sub

Sub CreateReporter
	reporter = reporter.Initialize("KSCrashInstallationEmail").RunMethod("sharedInstance", Null)
	Dim recipients As List = Array("support@basic4ppc.com") '<------ change address
	reporter.SetField("recipients", recipients)
	reporter.SetField("reportStyle", 1) 'KSCrashEmailReportStyleApple
	reporter.SetField("subject", "Crash Report")
	reporter.SetField("message", "This Is a crash report")
	reporter.SetField("filenameFmt", "crash-report-%d.txt.gz")
	reporter.RunMethod("install", Null)
End Sub

#if Not(SIMULATOR)
#if OBJC
#import <KSCrash/KSCrashFramework.h>

- (void) sendReports:(KSCrashInstallation*)installation {
[installation sendAllReportsWithCompletion:^(NSArray* reports, BOOL completed, NSError* error)
     {
         if(completed)
         {
             NSLog(@"Sent %d reports", (int)[reports count]);
         }
         else
         {
             NSLog(@"Failed to send reports: %@", error);
         }
     }];
}
#End If
#End If

Sub SetTitleColor(nav As NavigationController, clr As Int)
	Dim attributes As NativeObject
	attributes = attributes.Initialize("B4IAttributedString").RunMethod("createAttributes::", _
     Array(Font.CreateNew(18), attributes.ColorToUIColor(clr)))
	Dim no As NativeObject = nav
	no.GetField("navigationBar").RunMethod("setTitleTextAttributes:", Array(attributes))
End Sub

Sub Application_OpenUrl (Url As String, Data As Object, SourceApplication As String) As Boolean

	
	B4XPages.MainPage.auth.CallFromOpenUrl(Url)
	Return True
End Sub

'Template version: B4i-1.0
#Region Delegates
Private Sub Application_Background
	B4XPages.Delegate.Activity_Pause
	fm.FCMDisconnect
	ForegroundFlag = False
End Sub

Private Sub Application_Foreground
	B4XPages.Delegate.Activity_Resume
End Sub
#End Region

#if OBJC
@end
@interface B4IPanelView  (touchcancelled)
@end
@implementation B4IPanelView  (touchcancelled)

- (void)touchesCancelled:(NSSet *)touches withEvent:(UIEvent *)event {
		B4I* bi = [self valueForKey:@"bi"];
		NSString* eventName = [self valueForKey:@"eventName"];
		for (UITouch *u in touches) {
            CGPoint p = [u locationInView:self];
            [bi raiseEvent:self event:eventName params:@[@4, @(p.x), @(p.y)]];
        }
}
#End If