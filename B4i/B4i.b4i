Build1=Default,b4i.pleroma,HU2_PUBLIC
File1=AccountView.bil
File10=MiniAccountView.bil
File11=Missing-image-232x150.png
File12=nsfw.74818f9.png
File13=play.png
File14=Search.bil
File15=StatusList.bil
File16=StatusViewImpl.bil
File17=VideoPlayer.bil
File18=WebViewDialog.bil
File2=CardView.bil
File3=DialogContainer.bil
File4=empty.png
File5=GifView.bil
File6=hamburger.png
File7=LeftDrawer.bil
File8=lstDrawerUser.bil
File9=MainPage.bil
FileGroup1=Default Group
FileGroup10=Default Group
FileGroup11=Default Group
FileGroup12=Default Group
FileGroup13=Default Group
FileGroup14=Default Group
FileGroup15=Default Group
FileGroup16=Default Group
FileGroup17=Default Group
FileGroup18=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
FileGroup9=Default Group
Group=Default Group
Library1=icore
Library10=zoomimageview
Library11=webp
Library12=keyvaluestore
Library13=b4xdrawer
Library14=b4xpreferencesdialog
Library15=bctoast
Library16=ifirebaseanalytics
Library2=b4xpages
Library3=xui views
Library4=bctextengine
Library5=ijson
Library6=iui8
Library7=b4xgifview
Library8=minihtmlparser
Library9=bitmapsasync
Module1=|relative|..\AccountView
Module10=|relative|..\MiniAccountView
Module11=|relative|..\OAuth
Module12=|relative|..\PleromaFeed
Module13=|relative|..\RequestsManager
Module14=|relative|..\SearchManager
Module15=|relative|..\StackManager
Module16=|relative|..\StatusView
Module17=|relative|..\StubView
Module18=|relative|..\TextUtils
Module19=|relative|..\ViewsCache
Module2=|relative|..\B4XMainPage
Module20=|relative|..\WebViewDialog
Module3=|relative|..\BBListItem
Module4=|relative|..\CardView
Module5=|relative|..\Constants
Module6=|relative|..\DrawerManager
Module7=|relative|..\HtmlToRuns
Module8=|relative|..\ImagesCache
Module9=|relative|..\ListOfStatuses
NumberOfFiles=18
NumberOfLibraries=16
NumberOfModules=20
Version=6.8
@EndOfDesignText@
'Code module
#Region  Project Attributes 
	#ApplicationLabel: B4X Pleroma
	#Version: 1.0.0 
	'Orientation possible values: Portrait, LandscapeLeft, LandscapeRight and PortraitUpsideDown
	#iPhoneOrientations: Portrait
	#iPadOrientations: Portrait
	#Target: iPhone, iPad
	#ATSEnabled: false
	#MinVersion: 8
	#PlistExtra: <key>UIViewControllerBasedStatusBarAppearance</key><false/>
	#UrlScheme: b4i.pleroma
	#AdditionalLib: KSCrash.framework.3
	#AdditionalLib: MessageUI.framework
	#AdditionalLib: SystemConfiguration.framework
	#AdditionalLib: libc++.dylib
	#AdditionalLib: libz.dylib
#End Region

Sub Process_Globals
	Public App As Application
	Public NavControl As NavigationController
	Private reporter As NativeObject
	Private xui As XUI
	Private Analytics As FirebaseAnalytics
End Sub

Private Sub Application_Start (Nav As NavigationController)
	NavControl = Nav
	Analytics.Initialize 
	Dim PagesManager As B4XPagesManager
	PagesManager.Initialize(NavControl)
	NavControl.NavigationBarVisible = True
	Dim no As NativeObject = NavControl
	no.GetField("navigationBar").RunMethod("setBarTintColor:", Array(no.ColorToUIColor(0xFF00BBFF)))
	Dim no As NativeObject = App
	no.RunMethod("setStatusBarStyle:", Array(1))
	SetTitleColor(Nav, Colors.White)
	Dim no As NativeObject = NavControl
	no.GetField("navigationBar").RunMethod("setTintColor:", Array(no.ColorToUIColor(Colors.White)))
	#if RELEASE
	If App.IsSimulator = False Then
		CreateReporter
		SendReportsIfNeeded
	End If
	#end if
	
End Sub

Sub SendReportsIfNeeded As ResumableSub
	Dim no As NativeObject
	no = no.Initialize("KSCrash").RunMethod("sharedInstance", Null)
	Dim reports As Int = no.GetField("reportCount").AsNumber
	Log($"Number of reports: ${reports}"$)
	'Page1.Title = reports
	If reports > 0 Then
		Sleep(0)
		Dim sf As Object = xui.Msgbox2Async("The app crashed last time it was launched. Please help us improve and send a crash report?", _
			"", "Yes", "No", "", Null)
		Wait For (sf) Msgbox_Result (Result As Int)
		If Result = xui.DialogResponse_Positive Then
			Dim nme As NativeObject = Me
			nme.RunMethod("sendReports:", Array(reporter))
		Else
			no.RunMethod("deleteAllReports", Null)
		End If
	End If
	Return True
End Sub

Sub CreateReporter
	reporter = reporter.Initialize("KSCrashInstallationEmail").RunMethod("sharedInstance", Null)
	Dim recipients As List = Array("support@basic4ppc.com") '<------ change address
	reporter.SetField("recipients", recipients)
	reporter.SetField("reportStyle", 1) 'KSCrashEmailReportStyleApple
	reporter.SetField("subject", "Crash Report")
	reporter.SetField("message", "This Is a crash report")
	reporter.SetField("filenameFmt", "crash-report-%d.txt.gz")
	reporter.RunMethod("install", Null)
End Sub

#if OBJC
#import <KSCrash/KSCrashFramework.h>

- (void) sendReports:(KSCrashInstallation*)installation {
[installation sendAllReportsWithCompletion:^(NSArray* reports, BOOL completed, NSError* error)
     {
         if(completed)
         {
             NSLog(@"Sent %d reports", (int)[reports count]);
         }
         else
         {
             NSLog(@"Failed to send reports: %@", error);
         }
     }];
}
#End If

Sub SetTitleColor(nav As NavigationController, clr As Int)
	Dim attributes As NativeObject
	attributes = attributes.Initialize("B4IAttributedString").RunMethod("createAttributes::", _
     Array(Font.CreateNew(18), attributes.ColorToUIColor(clr)))
	Dim no As NativeObject = nav
	no.GetField("navigationBar").RunMethod("setTitleTextAttributes:", Array(attributes))
End Sub

Sub Application_OpenUrl (Url As String, Data As Object, SourceApplication As String) As Boolean
	B4XPages.MainPage.auth.CallFromOpenUrl(Url)
	Return True
End Sub

'Template version: B4i-1.0
#Region Delegates
Private Sub Application_Background
	B4XPages.Delegate.Activity_Pause
End Sub

Private Sub Application_Foreground
	B4XPages.Delegate.Activity_Resume
End Sub
#End Region

#if OBJC
@end
@interface B4IPanelView  (touchcancelled)
@end
@implementation B4IPanelView  (touchcancelled)

- (void)touchesCancelled:(NSSet *)touches withEvent:(UIEvent *)event {
		B4I* bi = [self valueForKey:@"bi"];
		NSString* eventName = [self valueForKey:@"eventName"];
		for (UITouch *u in touches) {
            CGPoint p = [u locationInView:self];
            [bi raiseEvent:self event:eventName params:@[@4, @(p.x), @(p.y)]];
        }
}
#End If